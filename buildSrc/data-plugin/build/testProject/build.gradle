
        plugins {
            id 'de.dfki.mary.voicebuilding-festvox' // transitively applies voicebuilding-data plugin
        }

        repositories {
            ivy {
                url 'http://festvox.org/examples'
                layout 'pattern', {
                    artifact '[module]_[classifier]/packed/[artifact].[ext]'
                }
            }
        }

        dependencies {
            data "org.festvox:cmu_time_awb::ldom@tar.bz2"
            runtime group: 'de.dfki.mary', name: 'marytts-common', version: '5.2-beta2'
        }

        task testPlugins(group: 'Verification') << {
            assert plugins.findPlugin('java')
            assert plugins.findPlugin('de.dfki.mary.voicebuilding-base')
            assert plugins.findPlugin('de.dfki.mary.voicebuilding-data')
        }

        task testConfigurations(group: 'Verification') << {
            assert configurations.data
        }

        task testSourceSets(group: 'Verification') << {
            assert sourceSets.data
        }

        task testDependencies(group: 'Verification') << {
            assert configurations.data.dependencies.find { it.name == "cmu_time_awb" }
        }

        task testProcessDataResources {
            group 'Verification'
            dependsOn processDataResources
            doLast {
                assert fileTree(sourceSets.data.output.resourcesDir).include('*.wav').files
                assert fileTree(sourceSets.data.output.resourcesDir).include('*.lab').files
                assert fileTree(sourceSets.data.output.resourcesDir).include('*.data').files
            }
        }

        text.srcFileName = 'time.data'

        generateAllophones.dependsOn text

        task testWav {
            group 'Verification'
            dependsOn wav
            doLast {
                assert fileTree("$buildDir/wav").include('*.wav').files
            }
        }

        task testPraatPitchmarker {
            group 'Verification'
            dependsOn praatPitchmarker
            doLast {
                assert fileTree("$buildDir/pm").include('*.PointProcess').files
                assert fileTree("$buildDir/pm").include('*.pm').files
            }
        }

        task testMcepMaker {
            group 'Verification'
            dependsOn mcepMaker
            doLast {
                assert fileTree("$buildDir/mcep").include('*.mcep').files
            }
        }

        task testText {
            group 'Verification'
            dependsOn text
            doLast {
                assert fileTree(buildDir).include('text/*.txt').files
            }
        }

        task testGenerateAllophones {
            group 'Verification'
            dependsOn generateAllophones
            doLast {
                assert fileTree("$buildDir/prompt_allophones").include('*.xml').files
            }
        }

        task testGeneratePhoneFeatures {
            group 'Verification'
            dependsOn generatePhoneFeatures
            doLast {
                assert fileTree("$buildDir/phonefeatures").include('*.pfeats').files
            }
        }

        task testGenerateHalfPhoneFeatures {
            group 'Verification'
            dependsOn generateHalfPhoneFeatures
            doLast {
                assert fileTree("$buildDir/halfphonefeatures").include('*.hpfeats').files
            }
        }

        task testMaryJavaExec(type: JavaExec) {
            classpath sourceSets.main.runtimeClasspath
            main 'marytts.util.PrintSystemProperties'
        }
        